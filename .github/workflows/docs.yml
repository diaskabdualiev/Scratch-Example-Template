name: Build and Deploy Documentation

# Запуск workflow при push в main ветку и при Pull Request
on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

# Разрешения для записи в GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Группировка запусков - отменяет предыдущие запуски при новом push
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Сборка документации
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Build Sphinx documentation
      run: |
        make html
        
    - name: Upload documentation artifacts
      uses: actions/upload-pages-artifact@v3
      with:
        path: ./build/html

  # Развертывание на GitHub Pages (только для main/master ветки)
  deploy:
    # Запускается только после успешной сборки и только для основной ветки
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    needs: build
    
    runs-on: ubuntu-latest
    
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
      
    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4

  # Проверка ссылок (опционально)
  linkcheck:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        cache: 'pip'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Check external links
      run: |
        make linkcheck
      continue-on-error: true  # Не прерывать workflow при битых ссылках
      
    - name: Upload linkcheck results
      uses: actions/upload-artifact@v4
      if: always()  # Загружать даже при ошибках
      with:
        name: linkcheck-results
        path: build/linkcheck/ 