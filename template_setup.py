#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –±—ã—Å—Ç—Ä–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Sphinx Wiki Template –ø–æ–¥ –Ω–æ–≤—ã–π –ø—Ä–æ–µ–∫—Ç.

–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
    python template_setup.py

–≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –ø–æ–º–æ–∂–µ—Ç –≤–∞–º –±—ã—Å—Ç—Ä–æ –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞—Ç—å —à–∞–±–ª–æ–Ω –ø–æ–¥ –≤–∞—à –ø—Ä–æ–µ–∫—Ç,
–∏–∑–º–µ–Ω–∏–≤ –æ—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤ conf.py –∏ index.rst.
"""

import os
import sys
from pathlib import Path


def get_user_input():
    """–ü–æ–ª—É—á–∞–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø—Ä–æ–µ–∫—Ç–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è."""
    print("üöÄ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Sphinx Wiki Template")
    print("=" * 40)
    
    project_name = input("–ù–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞: ").strip()
    if not project_name:
        project_name = "My Documentation"
    
    author_name = input("–ò–º—è –∞–≤—Ç–æ—Ä–∞: ").strip()
    if not author_name:
        author_name = "Author Name"
    
    copyright_year = input("–ì–æ–¥ –¥–ª—è –∫–æ–ø–∏—Ä–∞–π—Ç–∞ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 2025): ").strip()
    if not copyright_year:
        copyright_year = "2025"
    
    version = input("–í–µ—Ä—Å–∏—è –ø—Ä–æ–µ–∫—Ç–∞ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 1.0.0): ").strip()
    if not version:
        version = "1.0.0"
    
    description = input("–ö–æ—Ä–æ—Ç–∫–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞: ").strip()
    if not description:
        description = "–î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è –ø—Ä–æ–µ–∫—Ç–∞"
    
    language = input("–Ø–∑—ã–∫ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ (ru/en, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é ru): ").strip().lower()
    if language not in ['ru', 'en']:
        language = 'ru'
    
    return {
        'project_name': project_name,
        'author_name': author_name,
        'copyright_year': copyright_year,
        'version': version,
        'description': description,
        'language': language
    }


def update_conf_py(config):
    """–û–±–Ω–æ–≤–ª—è–µ—Ç —Ñ–∞–π–ª conf.py —Å –Ω–æ–≤—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏."""
    conf_path = Path('source/conf.py')
    
    if not conf_path.exists():
        print(f"‚ùå –§–∞–π–ª {conf_path} –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return False
    
    # –ß–∏—Ç–∞–µ–º —Ç–µ–∫—É—â–∏–π —Ñ–∞–π–ª
    with open(conf_path, 'r', encoding='utf-8') as f:
        content = f.read()
    
    # –ó–∞–º–µ–Ω—è–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    replacements = {
        "project = 'Alashed Scratch'": f"project = '{config['project_name']}'",
        "copyright = '2025, Dias Kabdualiyev'": f"copyright = '{config['copyright_year']}, {config['author_name']}'",
        "author = 'Dias Kabdualiyev'": f"author = '{config['author_name']}'",
        "release = '1.0.0'": f"release = '{config['version']}'",
        "language = 'ru'": f"language = '{config['language']}'",
    }
    
    for old, new in replacements.items():
        content = content.replace(old, new)
    
    # –û–±–Ω–æ–≤–ª—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ç–µ–º—ã
    if "'description': '–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π Sphinx'" in content:
        content = content.replace(
            "'description': '–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π Sphinx'",
            f"'description': '{config['description']}'"
        )
    
    # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
    with open(conf_path, 'w', encoding='utf-8') as f:
        f.write(content)
    
    print("‚úÖ –§–∞–π–ª conf.py –æ–±–Ω–æ–≤–ª–µ–Ω")
    return True


def update_index_rst(config):
    """–û–±–Ω–æ–≤–ª—è–µ—Ç –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É index.rst."""
    index_path = Path('source/index.rst')
    
    if not index_path.exists():
        print(f"‚ùå –§–∞–π–ª {index_path} –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        return False
    
    # –ß–∏—Ç–∞–µ–º —Ç–µ–∫—É—â–∏–π —Ñ–∞–π–ª
    with open(index_path, 'r', encoding='utf-8') as f:
        content = f.read()
    
    # –ó–∞–º–µ–Ω—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ –∏ –æ–ø–∏—Å–∞–Ω–∏–µ
    old_title = "–î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π Sphinx"
    new_title = config['project_name']
    
    # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é —à–∞–ø–∫—É
    title_underline = "=" * len(new_title)
    new_header = f"""====================================
{new_title}
====================================

{config['description']}

.. note::
   –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è —Å–æ–∑–¥–∞–Ω–∞ —Å –ø–æ–º–æ—â—å—é Sphinx Wiki Template.
   –í—ã –º–æ–∂–µ—Ç–µ –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞—Ç—å –µ—ë –ø–æ–¥ —Å–≤–æ–∏ –Ω—É–∂–¥—ã."""

    # –ó–∞–º–µ–Ω—è–µ–º —Å—Ç–∞—Ä—É—é —à–∞–ø–∫—É
    lines = content.split('\n')
    new_lines = []
    skip_until_note = False
    
    for i, line in enumerate(lines):
        if line.strip() == "====================================":
            # –ù–∞–π–¥–µ–Ω–∞ —Å—Ç–∞—Ä–∞—è —à–∞–ø–∫–∞, –∑–∞–º–µ–Ω—è–µ–º –µ—ë
            new_lines.extend(new_header.split('\n'))
            # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å—Ç–∞—Ä—É—é —à–∞–ø–∫—É –¥–æ –ø–µ—Ä–≤–æ–π –¥–∏—Ä–µ–∫—Ç–∏–≤—ã .. note::
            skip_until_note = True
            continue
        
        if skip_until_note:
            if line.strip().startswith(".. note::"):
                # –ù–∞—à–ª–∏ –∫–æ–Ω–µ—Ü —Å—Ç–∞—Ä–æ–π —à–∞–ø–∫–∏, –Ω–∞—á–∏–Ω–∞–µ–º –¥–æ–±–∞–≤–ª—è—Ç—å —Å—Ç—Ä–æ–∫–∏ —Å–Ω–æ–≤–∞
                skip_until_note = False
                # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —Å—Ç–∞—Ä—É—é note –¥–∏—Ä–µ–∫—Ç–∏–≤—É
                continue
            elif line.strip() == "–ß—Ç–æ —Ç–∞–∫–æ–µ Sphinx?":
                # –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Å–ø–æ—Å–æ–± –Ω–∞–π—Ç–∏ –∫–æ–Ω–µ—Ü —à–∞–ø–∫–∏
                skip_until_note = False
                new_lines.append(line)
            continue
        
        new_lines.append(line)
    
    # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
    with open(index_path, 'w', encoding='utf-8') as f:
        f.write('\n'.join(new_lines))
    
    print("‚úÖ –§–∞–π–ª index.rst –æ–±–Ω–æ–≤–ª–µ–Ω")
    return True


def create_backup():
    """–°–æ–∑–¥–∞–µ—Ç —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é –≤–∞–∂–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤."""
    backup_dir = Path('backup_original')
    backup_dir.mkdir(exist_ok=True)
    
    files_to_backup = ['source/conf.py', 'source/index.rst']
    
    for file_path in files_to_backup:
        src = Path(file_path)
        if src.exists():
            dst = backup_dir / src.name
            with open(src, 'r', encoding='utf-8') as f:
                content = f.read()
            with open(dst, 'w', encoding='utf-8') as f:
                f.write(content)
    
    print(f"üíæ –†–µ–∑–µ—Ä–≤–Ω—ã–µ –∫–æ–ø–∏–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ {backup_dir}")


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Å–∫—Ä–∏–ø—Ç–∞."""
    print("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫—É Sphinx Wiki Template! üéâ\n")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –º—ã –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    if not Path('source/conf.py').exists():
        print("‚ùå –û—à–∏–±–∫–∞: –§–∞–π–ª source/conf.py –Ω–µ –Ω–∞–π–¥–µ–Ω!")
        print("–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã –∑–∞–ø—É—Å–∫–∞–µ—Ç–µ —Å–∫—Ä–∏–ø—Ç –∏–∑ –∫–æ—Ä–Ω—è –ø—Ä–æ–µ–∫—Ç–∞ Sphinx.")
        sys.exit(1)
    
    # –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é
    create_backup()
    
    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    config = get_user_input()
    
    print("\nüîß –ü—Ä–∏–º–µ–Ω—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏...")
    
    # –û–±–Ω–æ–≤–ª—è–µ–º —Ñ–∞–π–ª—ã
    success = True
    success &= update_conf_py(config)
    success &= update_index_rst(config)
    
    if success:
        print("\nüéâ –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
        print("\n–°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
        print("1. –ü—Ä–æ—Å–º–æ—Ç—Ä–∏—Ç–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –≤ source/conf.py –∏ source/index.rst")
        print("2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: make html")
        print("3. –ù–∞—á–Ω–∏—Ç–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –ø–æ–¥ –≤–∞—à –ø—Ä–æ–µ–∫—Ç")
        print("4. –£–¥–∞–ª–∏—Ç–µ –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã, –µ—Å–ª–∏ –æ–Ω–∏ –Ω–µ –Ω—É–∂–Ω—ã")
        print("\nüí° –°–æ–≤–µ—Ç: –†–µ–∑–µ—Ä–≤–Ω—ã–µ –∫–æ–ø–∏–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ –ø–∞–ø–∫–µ backup_original/")
    else:
        print("\n‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∏ –æ—à–∏–±–∫–∏ –ø—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤—ã—à–µ.")
        sys.exit(1)


if __name__ == '__main__':
    main() 