===========================
Перекрестные ссылки
===========================

Sphinx предоставляет мощную систему перекрестных ссылок для связывания 
различных частей документации.

.. _section-internal-links:

Внутренние ссылки
=================

Ссылки на разделы
-----------------

Вы можете ссылаться на разделы несколькими способами:

* Автоматическая ссылка на заголовок: `Внутренние ссылки`_
* Ссылка по метке: :ref:`section-internal-links`
* Ссылка на документ: :doc:`restructuredtext_basics`

.. _custom-label:

Пользовательские метки
----------------------

Создайте метку перед любым элементом:

.. code-block:: rst

   .. _custom-label:
   
   Заголовок раздела
   =================

Затем ссылайтесь на неё: :ref:`custom-label`

Ссылки на документы
===================

Относительные ссылки
--------------------

* :doc:`sphinx_directives` - ссылка на документ в той же папке
* :doc:`./code_examples` - явный относительный путь
* :download:`Конфигурация Sphinx <conf.py>` - скачать файл конфигурации

Ссылки с пользовательским текстом:

* :doc:`Директивы Sphinx <sphinx_directives>`
* :doc:`Примеры кода <code_examples>`

Абсолютные ссылки
-----------------

Ссылки от корня проекта:

* :doc:`/index` - главная страница
* :download:`Конфигурация <conf.py>` - файл настроек

Ссылки на объекты Python
=========================

.. note::
   Для демонстрации создадим несколько Python объектов для ссылок.

.. py:function:: calculate_area(length, width)

   Вычисляет площадь прямоугольника.
   
   :param float length: Длина прямоугольника
   :param float width: Ширина прямоугольника
   :returns: Площадь прямоугольника
   :rtype: float
   
   Пример использования:
   
   .. code-block:: python
   
      area = calculate_area(10, 5)
      print(f"Площадь: {area}")

.. py:class:: UserManager

   Класс для управления пользователями.
   
   .. py:method:: create_user(name, email)
   
      Создает нового пользователя.
      
      :param str name: Имя пользователя
      :param str email: Email пользователя
      :returns: Созданный пользователь
      :rtype: User
   
   .. py:method:: delete_user(user_id)
   
      Удаляет пользователя по ID.
      
      :param int user_id: ID пользователя

.. py:exception:: UserNotFoundError

   Исключение, возникающее когда пользователь не найден.

Ссылки на объекты:

* Функция: :py:func:`calculate_area`
* Класс: :py:class:`UserManager`
* Метод: :py:meth:`UserManager.create_user`
* Исключение: :py:exc:`UserNotFoundError`

Ссылки с пользовательским текстом:

* :py:func:`Вычисление площади <calculate_area>`
* :py:class:`Менеджер пользователей <UserManager>`

Внешние ссылки
===============

Простые внешние ссылки
----------------------

* `Python <https://python.org/>`_
* `Sphinx Documentation <https://www.sphinx-doc.org/>`_
* `GitHub <https://github.com/>`_

Именованные ссылки
------------------

Это ссылка на `Официальную документацию Python`_.

.. _Официальную документацию Python: https://docs.python.org/

Автоматические ссылки
---------------------

Sphinx автоматически создает ссылки для:

* https://www.sphinx-doc.org/
* user@example.com (нужно включить расширение)

Intersphinx ссылки
==================

Ссылки на другую документацию Sphinx:

* :py:func:`print` - функция Python
* :py:class:`dict` - класс словаря Python
* :external:py:mod:`os` - модуль os

Ссылки на Sphinx документацию:

* :external+sphinx:doc:`usage/quickstart` - быстрый старт Sphinx

.. note::
   Intersphinx ссылки настраиваются в conf.py через intersphinx_mapping.

Условные ссылки
===============

.. only:: html

   Эта ссылка видна только в HTML: :doc:`code_examples`

.. only:: latex

   Эта ссылка видна только в PDF версии.

Навигация по документации
=========================

Оглавление
----------

.. contents:: Содержание этой страницы
   :local:
   :depth: 2

Индекс терминов
---------------

.. index:: ссылки, навигация, Sphinx

Создание индексных записей:

.. index::
   single: документация
   pair: Sphinx; документация
   triple: Python; Sphinx; документация

Глоссарий ссылок
================

Термины, связанные со ссылками (см. полный :doc:`glossary`):

**Anchor**
   HTML элемент для создания якорных ссылок.

**Hyperlink** 
   Интерактивная ссылка на другой документ или ресурс.

**Internal link**
   Ссылка внутри одного документа или проекта.

**External link**
   Ссылка на внешний ресурс в интернете.

Работающие ссылки на термины из :doc:`glossary`:

* :term:`Cross-reference` - перекрестные ссылки
* :term:`Directive` - команды reStructuredText
* :term:`Extension` - расширения Sphinx

Автоматическая нумерация
========================

.. _figure-example:

.. figure:: https://via.placeholder.com/300x200.png?text=Рисунок+1
   :align: center
   :alt: Пример рисунка
   
   Рисунок 1: Пример изображения для ссылки

Ссылка на рисунок: см. :numref:`figure-example`.

.. _table-example:

.. table:: Пример таблицы для ссылки
   :align: center

   =====  =====  =====
   A      B      C
   =====  =====  =====
   1      2      3
   4      5      6
   =====  =====  =====

Ссылка на таблицу: см. :numref:`table-example`.

Ссылки на файлы
===============

Загрузка файлов:

:download:`Скачать конфигурацию <conf.py>`

Ссылки на исходный код:

:doc:`Главная страница <index>`

Навигационные элементы
======================

Хлебные крошки создаются автоматически в зависимости от темы.

Ссылки "Далее/Назад" создаются автоматически на основе главного toctree в :doc:`index`.

Поиск и фильтрация
==================

Sphinx автоматически создает поисковый индекс для быстрого поиска.

Метаданные для поиска:

:meta keywords: Sphinx, ссылки, навигация, документация
:meta description: Руководство по созданию перекрестных ссылок в Sphinx

Якорные ссылки
==============

.. _anchor-point:

Создание якорной точки для прямых ссылок
-----------------------------------------

Ссылка на якорь: :ref:`anchor-point`

Внешняя ссылка с якорем: `GitHub Issues <https://github.com/username/repo/issues#new>`_

Проверка ссылок
===============

Sphinx может проверять корректность ссылок:

.. code-block:: bash

   # Проверка внешних ссылок
   make linkcheck

Это поможет найти битые ссылки в документации.

.. tip::
   Регулярно проверяйте ссылки в CI/CD pipeline для поддержания 
   актуальности документации. 